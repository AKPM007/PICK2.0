import aiohttp
import base64
from pyrogram import filters
from pyrogram.types import Message
from . import app

API_URL = "https://lexica.qewertyy.dev/upscale"

@app.on_message(filters.command("up"))
async def upscale_image(client, message: Message):
    if not message.reply_to_message or not message.reply_to_message.photo:
        await message.reply("Please reply to an image to upscale it.")
        return

    progress_msg = await message.reply("Upscaling your image, please wait...")
    try:
        photo = message.reply_to_message.photo
        file = await client.download_media(photo.file_id, in_memory=True)
        image_data = base64.b64encode(file.getvalue()).decode("utf-8")

        async with aiohttp.ClientSession() as session:
            response = await session.post(
                API_URL,
                data={"image_data": image_data},
            )
            if response.status != 200:
                raise Exception("Failed to upscale image.")

            upscaled_image = await response.read()

        await progress_msg.delete()
        await message.reply_photo(
            photo=upscaled_image,
            caption=f"**Upscaled your image.**\n**Generated By:** @{client.me.username}",
        )
    except Exception as e:
        try:
            await progress_msg.edit(f"Failed to upscale the image: {e}")
        except:
            await message.reply(f"Failed to upscale the image: {e}")